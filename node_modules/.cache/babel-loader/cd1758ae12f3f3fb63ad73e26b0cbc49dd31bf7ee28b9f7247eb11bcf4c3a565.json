{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { NameSpace } from '../utils/nameSpace';\nimport { getToken } from '../utils/token';\nexport const sixCitiesApi = createApi({\n  reducerPath: NameSpace.sixCitiesApi,\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://13.react.htmlacademy.pro/six-cities',\n    prepareHeaders: headers => {\n      const token = getToken();\n      if (token) {\n        headers.set('x-token', `${token}`);\n      }\n      return headers;\n    }\n  }),\n  tagTypes: ['OFFERS', 'NEARBY', 'FAVORITES', 'COMMENTS'],\n  endpoints: builder => ({\n    //queries\n    getOffers: builder.query({\n      query: () => '/offers',\n      providesTags: ['OFFERS']\n    }),\n    getNearbyOffers: builder.query({\n      query: id => `/offers/${id}/nearby`,\n      providesTags: ['FAVORITES']\n    }),\n    getComments: builder.query({\n      query: id => `/comments/${id}`,\n      providesTags: ['COMMENTS']\n    }),\n    //mutations\n    fetchAddComment: builder.mutation({\n      query: ({\n        id,\n        comment,\n        rating\n      }) => ({\n        url: `/comments/${id}`,\n        method: 'POST',\n        body: {\n          comment,\n          rating\n        }\n      }),\n      invalidatesTags: ['COMMENTS']\n    }),\n    fetchAddFavorite: builder.mutation({\n      query: id => ({\n        url: `favorite/${id}/1`,\n        method: 'POST'\n      }),\n      invalidatesTags: ['FAVORITES']\n    }),\n    fetchRemoveFavorite: builder.mutation({\n      query: id => ({\n        url: `favorite/${id}/0`,\n        method: 'POST'\n      }),\n      invalidatesTags: ['FAVORITES']\n    })\n  })\n});\nexport const {\n  useGetOffersQuery,\n  useGetNearbyOffersQuery,\n  useGetCommentsQuery\n} = sixCitiesApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","NameSpace","getToken","sixCitiesApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","token","set","tagTypes","endpoints","builder","getOffers","query","providesTags","getNearbyOffers","id","getComments","fetchAddComment","mutation","comment","rating","url","method","body","invalidatesTags","fetchAddFavorite","fetchRemoveFavorite","useGetOffersQuery","useGetNearbyOffersQuery","useGetCommentsQuery"],"sources":["/Users/a79858/Documents/GitHub/SixCitiesLast/src/features/sixCitiesApi.ts"],"sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\nimport {NameSpace} from '../utils/nameSpace';\nimport {getToken} from '../utils/token';\nimport {OffersArray} from '../types/types';\nimport {BaseQueryArg} from '@reduxjs/toolkit/dist/query/baseQueryTypes';\nimport {ServerResponse} from 'node:http';\n\n\nexport const sixCitiesApi = createApi({\n  reducerPath: NameSpace.sixCitiesApi,\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://13.react.htmlacademy.pro/six-cities',\n    prepareHeaders: (headers) => {\n      const token = getToken();\n      if (token) {\n        headers.set('x-token', `${token}`);\n      }\n      return headers;\n    }\n  }),\n  tagTypes: ['OFFERS', 'NEARBY', 'FAVORITES', 'COMMENTS'],\n  endpoints: (builder) => ({\n\n      //queries\n      getOffers: builder.query<OffersArray,void>({\n        query: () => '/offers',\n        providesTags: ['OFFERS'],\n      }),\n      getNearbyOffers: builder.query<OffersArray, number>({\n        query: (id: number) => `/offers/${id}/nearby`,\n        providesTags: ['FAVORITES']\n      }),\n      getComments: builder.query<Comment[], number>({\n        query: (id: number) => `/comments/${id}`,\n        providesTags: ['COMMENTS']\n      }),\n\n      //mutations\n      fetchAddComment: builder.mutation<void, {id: number,comment: string, rating: number}>({\n        query: ({id, comment, rating}) => ({\n          url: `/comments/${id}`,\n          method: 'POST',\n          body: ({comment, rating})\n        }),\n        invalidatesTags: ['COMMENTS']\n      }),\n      fetchAddFavorite: builder.mutation<ServerResponse, number>({\n        query: (id: number) => ({\n          url: `favorite/${id}/1`,\n          method: 'POST',\n        }),\n        invalidatesTags: ['FAVORITES']\n      }),\n      fetchRemoveFavorite: builder.mutation<ServerResponse, number>({\n        query: (id: number) => ({\n          url: `favorite/${id}/0`,\n          method: 'POST',\n        }),\n        invalidatesTags: ['FAVORITES']\n      })\n\n\n  }),\n});\n\nexport const {useGetOffersQuery, useGetNearbyOffersQuery, useGetCommentsQuery} = sixCitiesApi;\n\n\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;AACtE,SAAQC,SAAS,QAAO,oBAAoB;AAC5C,SAAQC,QAAQ,QAAO,gBAAgB;AAMvC,OAAO,MAAMC,YAAY,GAAGJ,SAAS,CAAC;EACpCK,WAAW,EAAEH,SAAS,CAACE,YAAY;EACnCE,SAAS,EAAEL,cAAc,CAAC;IACxBM,OAAO,EAAE,6CAA6C;IACtDC,cAAc,EAAGC,OAAO,IAAK;MAC3B,MAAMC,KAAK,GAAGP,QAAQ,CAAC,CAAC;MACxB,IAAIO,KAAK,EAAE;QACTD,OAAO,CAACE,GAAG,CAAC,SAAS,EAAE,GAAGD,KAAK,EAAE,CAAC;MACpC;MACA,OAAOD,OAAO;IAChB;EACF,CAAC,CAAC;EACFG,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC;EACvDC,SAAS,EAAGC,OAAO,KAAM;IAErB;IACAC,SAAS,EAAED,OAAO,CAACE,KAAK,CAAmB;MACzCA,KAAK,EAAEA,CAAA,KAAM,SAAS;MACtBC,YAAY,EAAE,CAAC,QAAQ;IACzB,CAAC,CAAC;IACFC,eAAe,EAAEJ,OAAO,CAACE,KAAK,CAAsB;MAClDA,KAAK,EAAGG,EAAU,IAAK,WAAWA,EAAE,SAAS;MAC7CF,YAAY,EAAE,CAAC,WAAW;IAC5B,CAAC,CAAC;IACFG,WAAW,EAAEN,OAAO,CAACE,KAAK,CAAoB;MAC5CA,KAAK,EAAGG,EAAU,IAAK,aAAaA,EAAE,EAAE;MACxCF,YAAY,EAAE,CAAC,UAAU;IAC3B,CAAC,CAAC;IAEF;IACAI,eAAe,EAAEP,OAAO,CAACQ,QAAQ,CAAqD;MACpFN,KAAK,EAAEA,CAAC;QAACG,EAAE;QAAEI,OAAO;QAAEC;MAAM,CAAC,MAAM;QACjCC,GAAG,EAAE,aAAaN,EAAE,EAAE;QACtBO,MAAM,EAAE,MAAM;QACdC,IAAI,EAAG;UAACJ,OAAO;UAAEC;QAAM;MACzB,CAAC,CAAC;MACFI,eAAe,EAAE,CAAC,UAAU;IAC9B,CAAC,CAAC;IACFC,gBAAgB,EAAEf,OAAO,CAACQ,QAAQ,CAAyB;MACzDN,KAAK,EAAGG,EAAU,KAAM;QACtBM,GAAG,EAAE,YAAYN,EAAE,IAAI;QACvBO,MAAM,EAAE;MACV,CAAC,CAAC;MACFE,eAAe,EAAE,CAAC,WAAW;IAC/B,CAAC,CAAC;IACFE,mBAAmB,EAAEhB,OAAO,CAACQ,QAAQ,CAAyB;MAC5DN,KAAK,EAAGG,EAAU,KAAM;QACtBM,GAAG,EAAE,YAAYN,EAAE,IAAI;QACvBO,MAAM,EAAE;MACV,CAAC,CAAC;MACFE,eAAe,EAAE,CAAC,WAAW;IAC/B,CAAC;EAGL,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAACG,iBAAiB;EAAEC,uBAAuB;EAAEC;AAAmB,CAAC,GAAG7B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}